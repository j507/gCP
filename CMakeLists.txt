##
# Is the cmake version sufficient?
##
CMAKE_MINIMUM_REQUIRED(VERSION 3.1.0)

##
# Is the deal.ii library installed?
##
FIND_PACKAGE(deal.II 9.2.0
  HINTS ${deal.II_DIR} ${DEAL_II_DIR} ../ ../../ $ENV{DEAL_II_DIR}
  )
IF(NOT ${deal.II_FOUND})
  MESSAGE(FATAL_ERROR "\n"
    "*** Could not locate a (sufficiently recent) version of deal.II. ***\n\n"
    "You may want to either pass a flag -DDEAL_II_DIR=/path/to/deal.II to cmake\n"
    "or set an environment variable \"DEAL_II_DIR\" that contains this path."
    )
ENDIF()

#
# Are all dependencies fulfilled?
#
IF(NOT DEAL_II_WITH_MPI OR NOT DEAL_II_WITH_P4EST OR NOT DEAL_II_WITH_TRILINOS) # keep in one line
  MESSAGE(FATAL_ERROR "
Error! This tutorial requires a deal.II library that was configured with the following options:
    DEAL_II_WITH_MPI = ON
    DEAL_II_WITH_P4EST = ON
    DEAL_II_WITH_TRILINOS = ON
However, the deal.II library found at ${DEAL_II_PATH} was configured with these options:
    DEAL_II_WITH_MPI = ${DEAL_II_WITH_MPI}
    DEAL_II_WITH_P4EST = ${DEAL_II_WITH_P4EST}
    DEAL_II_WITH_TRILINOS = ${DEAL_II_WITH_TRILINOS}
This conflicts with the requirements."
    )
ENDIF()

#
# Define build types
#
ADD_CUSTOM_TARGET(debug
  COMMAND ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE=Debug ${CMAKE_SOURCE_DIR}
  COMMAND ${CMAKE_COMMAND} --build ${CMAKE_BINARY_DIR} --target all
  COMMENT "Switch CMAKE_BUILD_TYPE to Debug"
  )
ADD_CUSTOM_TARGET(release
  COMMAND ${CMAKE_COMMAND} -DCMAKE_BUILD_TYPE=Release ${CMAKE_SOURCE_DIR}
  COMMAND ${CMAKE_COMMAND} --build ${CMAKE_BINARY_DIR} --target all
  COMMENT "Switch CMAKE_BUILD_TYPE to Release"
)

#
# Define the output that should be cleaned:
#
SET(CLEAN_UP_FILES *.vtu *.pvtu *.visit *.vtk)


DEAL_II_INITIALIZE_CACHED_VARIABLES()
PROJECT(gCP)
ENABLE_TESTING()
INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/include)
ADD_SUBDIRECTORY(source)
ADD_SUBDIRECTORY(bin)
ADD_SUBDIRECTORY(tests)

SET(SOURCE_FILES
    gCPFEM.cc
    simple_shear.cc
    )

FOREACH(sourcefile ${SOURCE_FILES})
  STRING(REPLACE ".cc" "" executablename ${sourcefile} )
  PROJECT(${executablename})
  ADD_EXECUTABLE(${executablename} ${sourcefile})
  DEAL_II_SETUP_TARGET(${executablename})
  TARGET_LINK_LIBRARIES(${executablename} gCP stdc++fs)
ENDFOREACH(sourcefile ${APP_SOURCES})